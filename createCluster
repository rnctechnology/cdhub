#!/bin/bash

BPSTACK=hdp
if [ $# -gt 0 ]; then
  var1=$1
  if [ "X${var1,,}" = "X" ]; then
   BPSTACK="${var1,,}"
  fi
fi

#create blueprint file and host file
HSF="./hdp/rnctech_hosts.json"
BPF="./hdp/rnctech_blueprint.json"
if [ "$BPSTACK" = "hdp" ]; then
  cp ./hdp/rnctech_blueprint.json.tmp $BPF
else  
  #cp BPF and HSF file and blueprint tempalate file
fi
cp rnctech_hosts.json.tmp $HSF

#create host mapping file
for host in `cat hosts.txt`; do
  hk=$(echo $host | cut -d':' -f1)
  hh=$(echo $host | cut -d':' -f2)
  case $hk in
    nnode) sed -i "s|NNODE|$hh|g" $HSF
 	      sed -i "s|NNODE|$hh|g" $BPF
        ;;
    mnode) sed -i "s|MNODE|$hh|g" $HSF
       sed -i "s|MNODE|$hh|g" $BPF
        ;;
    rnode) sed -i "s|RNODE|$hh|g" $HSF
        sed -i "s|RNODE|$hh|g" $BPF
        ;;
    dnode) sed -i "s|DNODE|$hh|g" $HSF
        sed -i "s|DNODE|$hh|g" $BPF
        ;;
  esac
done
echo "blueprint and hosts generated for $BPSTACK !"

#creat hadoop custer
MASTER=`hostname -f`
PORT=8088
STACKNAME="HDP"
STACKV="2.3"

if [ "$BPSTACK" = "hdp" ]; then
  STACKNAME="HDP"
  STACKV="2.3"
  cd hdp
else
  #other stack
fi

CURDIR=`pwd`
echo "install cluster at $CURDIR"

CLSRNAME="RNCTechCluster"

#check
curl -H "X-Requested-By: ambari" -X GET -u admin:admin http://$MASTER:$PORT/api/v1/stacks/$STACKNAME/versons/$STACKV  | grep '"HDFS"'

for host in `cut -d':' -f2 ../hosts.txt`; do
  curl -H "X-Requested-By: ambari" -X GET -u admin:admin http://$MASTER:$PORT/api/v1/hosts | grep $host
done

#register blueprint
curl -H "X-Requested-By: ambari" -X POST -u admin:admin http://$MASTER:$PORT/api/v1/blueprints/rnctechBP -d @rnctech_blueprint.json

#curl -H "X-Requested-By: ambari" -X GET -u admin:admin http://$MASTER:$PORT/api/v1/blueprints/rnctechBP

#create cluster
curl -H 'X-Requested-By: ambari' -X POST -u admin:admin http://$MASTER:$PORT/api/v1/clusters/$CLSRNAME -d @rnctech_hosts.json

#show result

counter=0
status="IN_PROGRESS"
#maximum wait 110 minutes
while [ $counter -le 110 ] && [ "$status" = "IN_PROGRESS" ]
do
    status="$(curl -s -H 'X-Requested-By: ambari' -X GET -u admin:admin http://$MASTER:$PORT/api/v1/clusters/$CLSRNAME/requests/1 | grep request_status | cut -d'"' -f4)"
    if [ "$status" = "" ]; then
       status="COMPLETED"
    fi
    if [ "$status" = "PENDING" ]; then
       status="IN_PROGRESS"
    fi
    echo "$counter as $status"
    sleep 60
    let counter=$counter+1
done

if [ "$status" = "FAILED" ] || [ "$status" = "ABORTED" ]; then
    echo "create Cluster $4 failed as status $status"
    cd ..
    exit 1
else
   echo "$counter as $status"
fi

echo "well done"
